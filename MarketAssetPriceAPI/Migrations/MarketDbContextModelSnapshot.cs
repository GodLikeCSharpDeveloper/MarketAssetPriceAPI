// <auto-generated />
using System;
using MarketAssetPriceAPI.Data.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MarketAssetPriceAPI.Migrations
{
    [DbContext(typeof(MarketDbContext))]
    partial class MarketDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("MarketAssetPriceAPI.Data.Models.DTOs.InstrumentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApiProviderId")
                        .HasColumnType("TEXT");

                    b.Property<string>("BaseCurrency")
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Kind")
                        .HasColumnType("TEXT");

                    b.Property<string>("Symbol")
                        .HasColumnType("TEXT");

                    b.Property<double?>("TickSize")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Instruments");
                });

            modelBuilder.Entity("MarketAssetPriceAPI.Data.Models.DTOs.InstrumentProviderRelationEntity", b =>
                {
                    b.Property<int>("ProviderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InstrumentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InstrumentEntityId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProviderEntityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProviderId", "InstrumentId");

                    b.HasIndex("InstrumentEntityId");

                    b.HasIndex("ProviderEntityId");

                    b.ToTable("InstrumentProviders", (string)null);
                });

            modelBuilder.Entity("MarketAssetPriceAPI.Data.Models.DTOs.ProviderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Exchange")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Symbol")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("MarketAssetPriceAPI.Data.Models.DTOs.InstrumentProviderRelationEntity", b =>
                {
                    b.HasOne("MarketAssetPriceAPI.Data.Models.DTOs.InstrumentEntity", null)
                        .WithMany()
                        .HasForeignKey("InstrumentEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketAssetPriceAPI.Data.Models.DTOs.ProviderEntity", null)
                        .WithMany()
                        .HasForeignKey("ProviderEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
